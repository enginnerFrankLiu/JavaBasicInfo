1.JAVA 反射(c# 中反射和emit)
2.JAVA NIO
3.JAVA 网络编程

4.CLASS LOADER
5.GC
6.collection
7.Thread.
8.java内存模型.
9.java内存结构（运行时数据区域）


程序计数器：
当前线程所执行的字节码的行号指示器
当前线程所执行的字节码的行号指示器
当前线程所执行的字节码的行号指示器
字节码解释器工作时，就是通过改变这个技术器的值确定下一条执行的字节码指令的位置
字节码解释器工作时，就是通过改变这个计数器的值来确定下执行的字节码指令的位置

记录的是：正在执行的字节码指令地址

java 虚拟机栈：
java方法的内存模型，

方法区：
存在已被虚拟机加载的
类信息
常量
静态变量

即使编译后的代码等；


JAVA 8 9 10 11 等等的特性.
这里可以进行更为扩展阅读:
对比JavaScript 中的event loop 和 golang 中的channel.

GC:
粗略的GC讲解
https://juejin.cn/post/6844903817012576264
类加载器子系统 运行时数据区 执行引擎的关系
https://zhuanlan.zhihu.com/p/92646192
GC 完整知识体系:
https://github.com/enginnerFrankLiu/jvm
https://github.com/cncounter/gc-handbook


 Minor GC
 Major GC
 FULL  GC

 Mark-sweep
 Mark-sweep-compact
 Mark-copy

GC 基本概念和常见算法

GC 日志的一些参数

1.不同的场景下，是GC使用不同的算法进行垃圾回收-> 采用最佳的算法.

  本质上就是在减少stop-the-world.的时间
  ps:STW停顿( Stop The World pause , 全线暂停)

2.避免没必要的内存泄漏

3.硬件上的升级





局部变量
活动线程
静态区域
JNI 引用


多线程:
https://github.com/Beerkay/JavaMultiThreading
1- Java Multithreading: Starting Threads
2- Java Multithreading: Volatile – Basic Thread Communication
3- Java Multithreading: Synchronized
4- Java Multithreading: Lock Objects
5- Java Multithreading: Thread Pools
6- Java Multithreading: Countdown Latches
7- Java Multithreading: Producer-Consumer
8- Java Multithreading: Wait and Notify
9- Java Multithreading: Low-Level Producer-Consumer
10- Java Multithreading: Re-entrant Locks
11- Java Multithreading: Deadlock
12- Java Multithreading: Semaphores
13- Java Multithreading: Callable and Future
14- Java Multithreading: Interrupting Threads

IO 多路复用
https://mp.weixin.qq.com/s/JHqVY02mMJIpuZ4s9XOrVg